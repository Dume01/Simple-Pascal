Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENTIFIER SEMICOLON variable_declarations block DOT

    2 variable_declarations: ε
    3                      | VAR variable_list SEMICOLON

    4 variable_list: variable_declaration
    5              | variable_list SEMICOLON variable_declaration

    6 variable_declaration: IDENTIFIER_list COLON type

    7 IDENTIFIER_list: IDENTIFIER
    8                | IDENTIFIER_list COMMA IDENTIFIER

    9 type: INT
   10     | REAL
   11     | BOOLEAN
   12     | CHAR
   13     | ARRAY LBRACKET INTEGER RANGE INTEGER RBRACKET OF type

   14 block: BEG statement_list END

   15 statement_list: ε
   16               | statement SEMICOLON statement_list
   17               | block SEMICOLON

   18 statement: assignment_statement
   19          | read_statement
   20          | write_statement
   21          | conditional_statement
   22          | loop_statement

   23 assignment_statement: IDENTIFIER ASSIGN expression

   24 $@1: ε

   25 read_statement: READ $@1 LPAREN primary_expression RPAREN

   26 write_statement: WRITE LPAREN write_argument_list RPAREN

   27 write_argument_list: write_argument
   28                    | write_argument_list COMMA write_argument

   29 write_argument: STRING
   30               | primary_expression

   31 $@2: ε

   32 conditional_statement: IF $@2 expression THEN block maybe_else

   33 maybe_else: ε

   34 $@3: ε

   35 maybe_else: ELSE $@3 block

   36 $@4: ε

   37 loop_statement: FOR IDENTIFIER ASSIGN expression TO expression $@4 DO block

   38 $@5: ε

   39 loop_statement: WHILE $@5 expression DO block

   40 expression: primary_expression
   41           | expression PLUS expression
   42           | expression MINUS expression
   43           | expression MULT expression
   44           | expression DIV expression
   45           | expression MOD expression
   46           | expression EQUALS expression
   47           | expression NOTEQUAL expression
   48           | expression LESS expression
   49           | expression LESSEQUAL expression
   50           | expression GREATER expression
   51           | expression GREATEREQUAL expression
   52           | expression AND expression
   53           | expression OR expression
   54           | NOT expression

   55 primary_expression: IDENTIFIER
   56                   | IDENTIFIER LBRACKET primary_expression RBRACKET
   57                   | INTEGER
   58                   | REALX
   59                   | CHARACTER
   60                   | TRU
   61                   | FAL
   62                   | LPAREN expression RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <str> (258) 1 7 8 23 37 55 56
    INT <str> (259) 9
    REAL <str> (260) 10
    BOOLEAN <str> (261) 11
    CHAR <str> (262) 12
    INTEGER <str> (263) 13 57
    REALX <str> (264) 58
    STRING <str> (265) 29
    CHARACTER <str> (266) 59
    TRU <str> (267) 60
    FAL <str> (268) 61
    PROGRAM (269) 1
    VAR (270) 3
    FOR (271) 37
    DO (272) 37 39
    WHILE (273) 39
    ARRAY (274) 13
    AND (275) 52
    OR (276) 53
    NOT (277) 54
    END (278) 14
    READ (279) 25
    WRITE (280) 26
    PLUS (281) 41
    MINUS (282) 42
    MULT (283) 43
    DIV (284) 44
    MOD (285) 45
    ASSIGN (286) 23 37
    NOTEQUAL (287) 47
    LESS (288) 48
    GREATER (289) 50
    LESSEQUAL (290) 49
    GREATEREQUAL (291) 51
    SEMICOLON (292) 1 3 5 16 17
    COLON (293) 6
    COMMA (294) 8 28
    LPAREN (295) 25 26 62
    RPAREN (296) 25 26 62
    LBRACKET (297) 13 56
    RBRACKET (298) 13 56
    TO (299) 37
    DOT (300) 1
    IF (301) 32
    THEN (302) 32
    ELSE (303) 35
    BEG (304) 14
    RANGE (305) 13
    OF (306) 13
    EQUALS (307) 46


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    variable_declarations (55)
        on left: 2 3
        on right: 1
    variable_list (56)
        on left: 4 5
        on right: 3 5
    variable_declaration <str> (57)
        on left: 6
        on right: 4 5
    IDENTIFIER_list (58)
        on left: 7 8
        on right: 6 8
    type <str> (59)
        on left: 9 10 11 12 13
        on right: 6 13
    block (60)
        on left: 14
        on right: 1 17 32 35 37 39
    statement_list (61)
        on left: 15 16 17
        on right: 14 16
    statement (62)
        on left: 18 19 20 21 22
        on right: 16
    assignment_statement <t> (63)
        on left: 23
        on right: 18
    read_statement (64)
        on left: 25
        on right: 19
    $@1 (65)
        on left: 24
        on right: 25
    write_statement (66)
        on left: 26
        on right: 20
    write_argument_list (67)
        on left: 27 28
        on right: 26 28
    write_argument (68)
        on left: 29 30
        on right: 27 28
    conditional_statement (69)
        on left: 32
        on right: 21
    $@2 (70)
        on left: 31
        on right: 32
    maybe_else (71)
        on left: 33 35
        on right: 32
    $@3 (72)
        on left: 34
        on right: 35
    loop_statement (73)
        on left: 37 39
        on right: 22
    $@4 (74)
        on left: 36
        on right: 37
    $@5 (75)
        on left: 38
        on right: 39
    expression <t> (76)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 23 32 37 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 62
    primary_expression <t> (77)
        on left: 55 56 57 58 59 60 61 62
        on right: 25 30 40 56


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENTIFIER SEMICOLON variable_declarations block DOT

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENTIFIER • SEMICOLON variable_declarations block DOT

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: PROGRAM IDENTIFIER SEMICOLON • variable_declarations block DOT

    VAR  shift, and go to state 6

    $default  reduce using rule 2 (variable_declarations)

    variable_declarations  go to state 7


State 6

    3 variable_declarations: VAR • variable_list SEMICOLON

    IDENTIFIER  shift, and go to state 8

    variable_list         go to state 9
    variable_declaration  go to state 10
    IDENTIFIER_list       go to state 11


State 7

    1 program: PROGRAM IDENTIFIER SEMICOLON variable_declarations • block DOT

    BEG  shift, and go to state 12

    block  go to state 13


State 8

    7 IDENTIFIER_list: IDENTIFIER •

    $default  reduce using rule 7 (IDENTIFIER_list)


State 9

    3 variable_declarations: VAR variable_list • SEMICOLON
    5 variable_list: variable_list • SEMICOLON variable_declaration

    SEMICOLON  shift, and go to state 14


State 10

    4 variable_list: variable_declaration •

    $default  reduce using rule 4 (variable_list)


State 11

    6 variable_declaration: IDENTIFIER_list • COLON type
    8 IDENTIFIER_list: IDENTIFIER_list • COMMA IDENTIFIER

    COLON  shift, and go to state 15
    COMMA  shift, and go to state 16


State 12

   14 block: BEG • statement_list END

    IDENTIFIER  shift, and go to state 17
    FOR         shift, and go to state 18
    WHILE       shift, and go to state 19
    READ        shift, and go to state 20
    WRITE       shift, and go to state 21
    IF          shift, and go to state 22
    BEG         shift, and go to state 12

    $default  reduce using rule 15 (statement_list)

    block                  go to state 23
    statement_list         go to state 24
    statement              go to state 25
    assignment_statement   go to state 26
    read_statement         go to state 27
    write_statement        go to state 28
    conditional_statement  go to state 29
    loop_statement         go to state 30


State 13

    1 program: PROGRAM IDENTIFIER SEMICOLON variable_declarations block • DOT

    DOT  shift, and go to state 31


State 14

    3 variable_declarations: VAR variable_list SEMICOLON •
    5 variable_list: variable_list SEMICOLON • variable_declaration

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 3 (variable_declarations)

    variable_declaration  go to state 32
    IDENTIFIER_list       go to state 11


State 15

    6 variable_declaration: IDENTIFIER_list COLON • type

    INT      shift, and go to state 33
    REAL     shift, and go to state 34
    BOOLEAN  shift, and go to state 35
    CHAR     shift, and go to state 36
    ARRAY    shift, and go to state 37

    type  go to state 38


State 16

    8 IDENTIFIER_list: IDENTIFIER_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 39


State 17

   23 assignment_statement: IDENTIFIER • ASSIGN expression

    ASSIGN  shift, and go to state 40


State 18

   37 loop_statement: FOR • IDENTIFIER ASSIGN expression TO expression $@4 DO block

    IDENTIFIER  shift, and go to state 41


State 19

   39 loop_statement: WHILE • $@5 expression DO block

    $default  reduce using rule 38 ($@5)

    $@5  go to state 42


State 20

   25 read_statement: READ • $@1 LPAREN primary_expression RPAREN

    $default  reduce using rule 24 ($@1)

    $@1  go to state 43


State 21

   26 write_statement: WRITE • LPAREN write_argument_list RPAREN

    LPAREN  shift, and go to state 44


State 22

   32 conditional_statement: IF • $@2 expression THEN block maybe_else

    $default  reduce using rule 31 ($@2)

    $@2  go to state 45


State 23

   17 statement_list: block • SEMICOLON

    SEMICOLON  shift, and go to state 46


State 24

   14 block: BEG statement_list • END

    END  shift, and go to state 47


State 25

   16 statement_list: statement • SEMICOLON statement_list

    SEMICOLON  shift, and go to state 48


State 26

   18 statement: assignment_statement •

    $default  reduce using rule 18 (statement)


State 27

   19 statement: read_statement •

    $default  reduce using rule 19 (statement)


State 28

   20 statement: write_statement •

    $default  reduce using rule 20 (statement)


State 29

   21 statement: conditional_statement •

    $default  reduce using rule 21 (statement)


State 30

   22 statement: loop_statement •

    $default  reduce using rule 22 (statement)


State 31

    1 program: PROGRAM IDENTIFIER SEMICOLON variable_declarations block DOT •

    $default  reduce using rule 1 (program)


State 32

    5 variable_list: variable_list SEMICOLON variable_declaration •

    $default  reduce using rule 5 (variable_list)


State 33

    9 type: INT •

    $default  reduce using rule 9 (type)


State 34

   10 type: REAL •

    $default  reduce using rule 10 (type)


State 35

   11 type: BOOLEAN •

    $default  reduce using rule 11 (type)


State 36

   12 type: CHAR •

    $default  reduce using rule 12 (type)


State 37

   13 type: ARRAY • LBRACKET INTEGER RANGE INTEGER RBRACKET OF type

    LBRACKET  shift, and go to state 49


State 38

    6 variable_declaration: IDENTIFIER_list COLON type •

    $default  reduce using rule 6 (variable_declaration)


State 39

    8 IDENTIFIER_list: IDENTIFIER_list COMMA IDENTIFIER •

    $default  reduce using rule 8 (IDENTIFIER_list)


State 40

   23 assignment_statement: IDENTIFIER ASSIGN • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 58
    primary_expression  go to state 59


State 41

   37 loop_statement: FOR IDENTIFIER • ASSIGN expression TO expression $@4 DO block

    ASSIGN  shift, and go to state 60


State 42

   39 loop_statement: WHILE $@5 • expression DO block

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 61
    primary_expression  go to state 59


State 43

   25 read_statement: READ $@1 • LPAREN primary_expression RPAREN

    LPAREN  shift, and go to state 62


State 44

   26 write_statement: WRITE LPAREN • write_argument_list RPAREN

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    STRING      shift, and go to state 63
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    LPAREN      shift, and go to state 57

    write_argument_list  go to state 64
    write_argument       go to state 65
    primary_expression   go to state 66


State 45

   32 conditional_statement: IF $@2 • expression THEN block maybe_else

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 67
    primary_expression  go to state 59


State 46

   17 statement_list: block SEMICOLON •

    $default  reduce using rule 17 (statement_list)


State 47

   14 block: BEG statement_list END •

    $default  reduce using rule 14 (block)


State 48

   16 statement_list: statement SEMICOLON • statement_list

    IDENTIFIER  shift, and go to state 17
    FOR         shift, and go to state 18
    WHILE       shift, and go to state 19
    READ        shift, and go to state 20
    WRITE       shift, and go to state 21
    IF          shift, and go to state 22
    BEG         shift, and go to state 12

    $default  reduce using rule 15 (statement_list)

    block                  go to state 23
    statement_list         go to state 68
    statement              go to state 25
    assignment_statement   go to state 26
    read_statement         go to state 27
    write_statement        go to state 28
    conditional_statement  go to state 29
    loop_statement         go to state 30


State 49

   13 type: ARRAY LBRACKET • INTEGER RANGE INTEGER RBRACKET OF type

    INTEGER  shift, and go to state 69


State 50

   55 primary_expression: IDENTIFIER •
   56                   | IDENTIFIER • LBRACKET primary_expression RBRACKET

    LBRACKET  shift, and go to state 70

    $default  reduce using rule 55 (primary_expression)


State 51

   57 primary_expression: INTEGER •

    $default  reduce using rule 57 (primary_expression)


State 52

   58 primary_expression: REALX •

    $default  reduce using rule 58 (primary_expression)


State 53

   59 primary_expression: CHARACTER •

    $default  reduce using rule 59 (primary_expression)


State 54

   60 primary_expression: TRU •

    $default  reduce using rule 60 (primary_expression)


State 55

   61 primary_expression: FAL •

    $default  reduce using rule 61 (primary_expression)


State 56

   54 expression: NOT • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 71
    primary_expression  go to state 59


State 57

   62 primary_expression: LPAREN • expression RPAREN

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 72
    primary_expression  go to state 59


State 58

   23 assignment_statement: IDENTIFIER ASSIGN expression •
   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85

    $default  reduce using rule 23 (assignment_statement)


State 59

   40 expression: primary_expression •

    $default  reduce using rule 40 (expression)


State 60

   37 loop_statement: FOR IDENTIFIER ASSIGN • expression TO expression $@4 DO block

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 86
    primary_expression  go to state 59


State 61

   39 loop_statement: WHILE $@5 expression • DO block
   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    DO            shift, and go to state 87
    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85


State 62

   25 read_statement: READ $@1 LPAREN • primary_expression RPAREN

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    LPAREN      shift, and go to state 57

    primary_expression  go to state 88


State 63

   29 write_argument: STRING •

    $default  reduce using rule 29 (write_argument)


State 64

   26 write_statement: WRITE LPAREN write_argument_list • RPAREN
   28 write_argument_list: write_argument_list • COMMA write_argument

    COMMA   shift, and go to state 89
    RPAREN  shift, and go to state 90


State 65

   27 write_argument_list: write_argument •

    $default  reduce using rule 27 (write_argument_list)


State 66

   30 write_argument: primary_expression •

    $default  reduce using rule 30 (write_argument)


State 67

   32 conditional_statement: IF $@2 expression • THEN block maybe_else
   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    THEN          shift, and go to state 91
    EQUALS        shift, and go to state 85


State 68

   16 statement_list: statement SEMICOLON statement_list •

    $default  reduce using rule 16 (statement_list)


State 69

   13 type: ARRAY LBRACKET INTEGER • RANGE INTEGER RBRACKET OF type

    RANGE  shift, and go to state 92


State 70

   56 primary_expression: IDENTIFIER LBRACKET • primary_expression RBRACKET

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    LPAREN      shift, and go to state 57

    primary_expression  go to state 93


State 71

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression
   54           | NOT expression •

    $default  reduce using rule 54 (expression)


State 72

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression
   62 primary_expression: LPAREN expression • RPAREN

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    RPAREN        shift, and go to state 94
    EQUALS        shift, and go to state 85


State 73

   52 expression: expression AND • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 95
    primary_expression  go to state 59


State 74

   53 expression: expression OR • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 96
    primary_expression  go to state 59


State 75

   41 expression: expression PLUS • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 97
    primary_expression  go to state 59


State 76

   42 expression: expression MINUS • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 98
    primary_expression  go to state 59


State 77

   43 expression: expression MULT • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 99
    primary_expression  go to state 59


State 78

   44 expression: expression DIV • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 100
    primary_expression  go to state 59


State 79

   45 expression: expression MOD • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 101
    primary_expression  go to state 59


State 80

   47 expression: expression NOTEQUAL • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 102
    primary_expression  go to state 59


State 81

   48 expression: expression LESS • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 103
    primary_expression  go to state 59


State 82

   50 expression: expression GREATER • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 104
    primary_expression  go to state 59


State 83

   49 expression: expression LESSEQUAL • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 105
    primary_expression  go to state 59


State 84

   51 expression: expression GREATEREQUAL • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 106
    primary_expression  go to state 59


State 85

   46 expression: expression EQUALS • expression

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 107
    primary_expression  go to state 59


State 86

   37 loop_statement: FOR IDENTIFIER ASSIGN expression • TO expression $@4 DO block
   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    TO            shift, and go to state 108
    EQUALS        shift, and go to state 85


State 87

   39 loop_statement: WHILE $@5 expression DO • block

    BEG  shift, and go to state 12

    block  go to state 109


State 88

   25 read_statement: READ $@1 LPAREN primary_expression • RPAREN

    RPAREN  shift, and go to state 110


State 89

   28 write_argument_list: write_argument_list COMMA • write_argument

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    STRING      shift, and go to state 63
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    LPAREN      shift, and go to state 57

    write_argument      go to state 111
    primary_expression  go to state 66


State 90

   26 write_statement: WRITE LPAREN write_argument_list RPAREN •

    $default  reduce using rule 26 (write_statement)


State 91

   32 conditional_statement: IF $@2 expression THEN • block maybe_else

    BEG  shift, and go to state 12

    block  go to state 112


State 92

   13 type: ARRAY LBRACKET INTEGER RANGE • INTEGER RBRACKET OF type

    INTEGER  shift, and go to state 113


State 93

   56 primary_expression: IDENTIFIER LBRACKET primary_expression • RBRACKET

    RBRACKET  shift, and go to state 114


State 94

   62 primary_expression: LPAREN expression RPAREN •

    $default  reduce using rule 62 (primary_expression)


State 95

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   52           | expression AND expression •
   53           | expression • OR expression

    OR  shift, and go to state 74

    $default  reduce using rule 52 (expression)


State 96

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression
   53           | expression OR expression •

    $default  reduce using rule 53 (expression)


State 97

   41 expression: expression • PLUS expression
   41           | expression PLUS expression •
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85

    $default  reduce using rule 41 (expression)


State 98

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   42           | expression MINUS expression •
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85

    $default  reduce using rule 42 (expression)


State 99

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   43           | expression MULT expression •
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85

    $default  reduce using rule 43 (expression)


State 100

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   44           | expression DIV expression •
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85

    $default  reduce using rule 44 (expression)


State 101

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   45           | expression MOD expression •
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85

    $default  reduce using rule 45 (expression)


State 102

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   47           | expression NOTEQUAL expression •
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND  shift, and go to state 73
    OR   shift, and go to state 74

    $default  reduce using rule 47 (expression)


State 103

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   48           | expression LESS expression •
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND  shift, and go to state 73
    OR   shift, and go to state 74

    $default  reduce using rule 48 (expression)


State 104

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   50           | expression GREATER expression •
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND  shift, and go to state 73
    OR   shift, and go to state 74

    $default  reduce using rule 50 (expression)


State 105

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   49           | expression LESSEQUAL expression •
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND  shift, and go to state 73
    OR   shift, and go to state 74

    $default  reduce using rule 49 (expression)


State 106

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   51           | expression GREATEREQUAL expression •
   52           | expression • AND expression
   53           | expression • OR expression

    AND  shift, and go to state 73
    OR   shift, and go to state 74

    $default  reduce using rule 51 (expression)


State 107

   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   46           | expression EQUALS expression •
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND  shift, and go to state 73
    OR   shift, and go to state 74

    $default  reduce using rule 46 (expression)


State 108

   37 loop_statement: FOR IDENTIFIER ASSIGN expression TO • expression $@4 DO block

    IDENTIFIER  shift, and go to state 50
    INTEGER     shift, and go to state 51
    REALX       shift, and go to state 52
    CHARACTER   shift, and go to state 53
    TRU         shift, and go to state 54
    FAL         shift, and go to state 55
    NOT         shift, and go to state 56
    LPAREN      shift, and go to state 57

    expression          go to state 115
    primary_expression  go to state 59


State 109

   39 loop_statement: WHILE $@5 expression DO block •

    $default  reduce using rule 39 (loop_statement)


State 110

   25 read_statement: READ $@1 LPAREN primary_expression RPAREN •

    $default  reduce using rule 25 (read_statement)


State 111

   28 write_argument_list: write_argument_list COMMA write_argument •

    $default  reduce using rule 28 (write_argument_list)


State 112

   32 conditional_statement: IF $@2 expression THEN block • maybe_else

    ELSE  shift, and go to state 116

    $default  reduce using rule 33 (maybe_else)

    maybe_else  go to state 117


State 113

   13 type: ARRAY LBRACKET INTEGER RANGE INTEGER • RBRACKET OF type

    RBRACKET  shift, and go to state 118


State 114

   56 primary_expression: IDENTIFIER LBRACKET primary_expression RBRACKET •

    $default  reduce using rule 56 (primary_expression)


State 115

   37 loop_statement: FOR IDENTIFIER ASSIGN expression TO expression • $@4 DO block
   41 expression: expression • PLUS expression
   42           | expression • MINUS expression
   43           | expression • MULT expression
   44           | expression • DIV expression
   45           | expression • MOD expression
   46           | expression • EQUALS expression
   47           | expression • NOTEQUAL expression
   48           | expression • LESS expression
   49           | expression • LESSEQUAL expression
   50           | expression • GREATER expression
   51           | expression • GREATEREQUAL expression
   52           | expression • AND expression
   53           | expression • OR expression

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    PLUS          shift, and go to state 75
    MINUS         shift, and go to state 76
    MULT          shift, and go to state 77
    DIV           shift, and go to state 78
    MOD           shift, and go to state 79
    NOTEQUAL      shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82
    LESSEQUAL     shift, and go to state 83
    GREATEREQUAL  shift, and go to state 84
    EQUALS        shift, and go to state 85

    $default  reduce using rule 36 ($@4)

    $@4  go to state 119


State 116

   35 maybe_else: ELSE • $@3 block

    $default  reduce using rule 34 ($@3)

    $@3  go to state 120


State 117

   32 conditional_statement: IF $@2 expression THEN block maybe_else •

    $default  reduce using rule 32 (conditional_statement)


State 118

   13 type: ARRAY LBRACKET INTEGER RANGE INTEGER RBRACKET • OF type

    OF  shift, and go to state 121


State 119

   37 loop_statement: FOR IDENTIFIER ASSIGN expression TO expression $@4 • DO block

    DO  shift, and go to state 122


State 120

   35 maybe_else: ELSE $@3 • block

    BEG  shift, and go to state 12

    block  go to state 123


State 121

   13 type: ARRAY LBRACKET INTEGER RANGE INTEGER RBRACKET OF • type

    INT      shift, and go to state 33
    REAL     shift, and go to state 34
    BOOLEAN  shift, and go to state 35
    CHAR     shift, and go to state 36
    ARRAY    shift, and go to state 37

    type  go to state 124


State 122

   37 loop_statement: FOR IDENTIFIER ASSIGN expression TO expression $@4 DO • block

    BEG  shift, and go to state 12

    block  go to state 125


State 123

   35 maybe_else: ELSE $@3 block •

    $default  reduce using rule 35 (maybe_else)


State 124

   13 type: ARRAY LBRACKET INTEGER RANGE INTEGER RBRACKET OF type •

    $default  reduce using rule 13 (type)


State 125

   37 loop_statement: FOR IDENTIFIER ASSIGN expression TO expression $@4 DO block •

    $default  reduce using rule 37 (loop_statement)
